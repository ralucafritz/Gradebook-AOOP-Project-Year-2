package clientSide;

import interfaces.GetNameInterface;
import repositories.CourseRepository;
import repositories.ProfessorRepository;

public class Course implements GetNameInterface {

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    private String name;
    private int currentID;
    private boolean hasProfessor;
    private Professor professor;

    private static int ID;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////// CONSTRUCTORS ///////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /// EMPTY CONSTRUCTOR FOR A COURSE
    public Course() {
        this.currentID = ID;
        ID ++;
    }

    // CONSTRUCTOR WITH PARAMETERS
    public Course(String name, boolean hasProfessor, Professor professor) {
        this.name = name;
        this.professor = professor;
        this.hasProfessor = true;
        this.professor.addCourse(this);

        this.currentID = ID;
        ID ++;
    }

    // CONSTRUCTOR FOR LOADING DATA FROM THE DB
    public Course(String name, boolean hasProfessor, int professorId, int currentID)   {
        this.name = name;
        this.hasProfessor = true;
        ProfessorRepository professorRepository = ProfessorRepository.getInstance();
        this.professor = professorRepository.getProfessorById(professorId);
        this.professor.addCourse(this);
        this.currentID = currentID;
    }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////// MUTATORS //////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public void setName(String name) {
        this.name = name;
    }

    public void changeProfessor(Professor professorToBeSelected) {
        this.professor = professorToBeSelected;
        professorToBeSelected.addCourse(this);
    }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////// ACCESSORS ////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public String getName() {
        return name;
    }

    public int getID() {
        return currentID;
    }

    public Professor getProfessor() {
        return professor;
    }

    public boolean hasProfessor() {
        return hasProfessor;
    }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////// DATABASE //////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public void updateDB() {
        int courseId = CourseRepository.getInstance().getIdByObject(this);
        CourseRepository.getInstance().updateCourse(this, courseId);
    }

}
